// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace IEBrowser
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Verify if the website can be accessed correctly using IE Web Browser
        /// </summary>
        public void IETestBrowser()
        {

            // Go to web page 'http://localhost/PaintWebSite/PaintStore.aspx' using new browser instance
            this.UIMSNCanadaOutlookSkypWindow.LaunchUrl(new System.Uri(this.IETestBrowserParams.UIMSNCanadaOutlookSkypWindowUrl));
        }
        
        /// <summary>
        /// Verify the headings of the table
        /// </summary>
        public void VerifyHeadings()
        {
            #region Variable Declarations
            HtmlCell uIPaintNameCell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UIPaintNameCell;
            HtmlCell uIQuantityCell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UIQuantityCell;
            #endregion

            // Verify that the 'InnerText' property of 'Paint Name' cell equals 'Paint Name'
            Assert.AreEqual(this.VerifyHeadingsExpectedValues.UIPaintNameCellInnerText, uIPaintNameCell.InnerText, "Heading \'Paint Name\' incorrect");

            // Verify that the 'InnerText' property of 'Quantity' cell equals 'Quantity'
            Assert.AreEqual(this.VerifyHeadingsExpectedValues.UIQuantityCellInnerText, uIQuantityCell.InnerText, "Heading \'Quantity\' incorrect");
        }
        
        /// <summary>
        /// Verify each row, both columns (Paint Name and Quantity)
        /// </summary>
        public void VerifyRows()
        {
            #region Variable Declarations
            HtmlCell uIRedCell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UIRedCell;
            HtmlCell uIItem3Cell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UIItem3Cell;
            HtmlCell uITurquoiseCell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UITurquoiseCell;
            HtmlCell uIItem17Cell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UIItem17Cell;
            HtmlCell uIGreyCell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UIGreyCell;
            HtmlCell uIItem5Cell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UIItem5Cell;
            HtmlCell uIIndigoCell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UIIndigoCell;
            HtmlCell uIItem6Cell = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UIPaintTableTable.UIItem6Cell;
            #endregion

            // Verify that the 'InnerText' property of 'Red' cell equals 'Red'
            Assert.AreEqual(this.VerifyRowsExpectedValues.UIRedCellInnerText, uIRedCell.InnerText, "Row \'Red\' incorrect");

            // Verify that the 'InnerText' property of '3' cell equals '3'
            Assert.AreEqual(this.VerifyRowsExpectedValues.UIItem3CellInnerText, uIItem3Cell.InnerText, "Quantity \'Red\' incorrect");

            // Verify that the 'InnerText' property of 'Turquoise' cell equals 'Turquoise'
            Assert.AreEqual(this.VerifyRowsExpectedValues.UITurquoiseCellInnerText, uITurquoiseCell.InnerText, "Row \'Turquoise\' incorrect");

            // Verify that the 'InnerText' property of '17' cell equals '17'
            Assert.AreEqual(this.VerifyRowsExpectedValues.UIItem17CellInnerText, uIItem17Cell.InnerText, "Quantity \'Turquoiuse\' incorrect");

            // Verify that the 'InnerText' property of 'Grey' cell equals 'Grey'
            Assert.AreEqual(this.VerifyRowsExpectedValues.UIGreyCellInnerText, uIGreyCell.InnerText, "Row \'Grey\' incorrect");

            // Verify that the 'InnerText' property of '5' cell equals '5'
            Assert.AreEqual(this.VerifyRowsExpectedValues.UIItem5CellInnerText, uIItem5Cell.InnerText, "Quantity \'Grey\' incorrect");

            // Verify that the 'InnerText' property of 'Indigo' cell equals 'Indigo'
            Assert.AreEqual(this.VerifyRowsExpectedValues.UIIndigoCellInnerText, uIIndigoCell.InnerText, "Row \'Indigo\' incorrect");

            // Verify that the 'InnerText' property of '6' cell equals '6'
            Assert.AreEqual(this.VerifyRowsExpectedValues.UIItem6CellInnerText, uIItem6Cell.InnerText, "Quantity \'Indigo\' incorrect");
        }
        
        /// <summary>
        /// Verifies the data within the table
        /// </summary>
        public void CheckTableData()
        {
            #region Variable Declarations
            HtmlDiv uIPaintNameQuantityGrePane1 = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UICtl01Custom.UIPaintNameQuantityGrePane1;
            #endregion

            // Verify that the 'InnerText' property of 'Paint NameQuantity Grey5 Indigo6 Red3' pane equals ' 
            //Paint NameQuantity
            //Grey5
            //Indigo6
            //Red3
            //Turquoise17'
            Assert.AreEqual(this.CheckTableDataExpectedValues.UIPaintNameQuantityGrePane1InnerText, uIPaintNameQuantityGrePane1.InnerText, "Incorrect table");
        }
        
        /// <summary>
        /// Verifies the number of rows
        /// </summary>
        public void CheckNumberRows()
        {
            #region Variable Declarations
            HtmlDiv uIPaintNameQuantityGrePane1 = this.UIMSNCanadaOutlookSkypWindow.UIPaintStoreDocument.UICtl01Custom.UIPaintNameQuantityGrePane1;
            #endregion

            // Verify that the 'InnerText' property of 'Paint NameQuantity Grey5 Indigo6 Red3' pane matches ' 
            //Paint NameQuantity
            //Grey5
            //Indigo6
            //Red3
            //Turquoise17'
            StringAssert.Matches(uIPaintNameQuantityGrePane1.InnerText, new Regex(this.CheckNumberRowsExpectedValues.UIPaintNameQuantityGrePane1InnerText), "Incorrect number of rows");
        }
        
        #region Properties
        public virtual IETestBrowserParams IETestBrowserParams
        {
            get
            {
                if ((this.mIETestBrowserParams == null))
                {
                    this.mIETestBrowserParams = new IETestBrowserParams();
                }
                return this.mIETestBrowserParams;
            }
        }
        
        public virtual VerifyHeadingsExpectedValues VerifyHeadingsExpectedValues
        {
            get
            {
                if ((this.mVerifyHeadingsExpectedValues == null))
                {
                    this.mVerifyHeadingsExpectedValues = new VerifyHeadingsExpectedValues();
                }
                return this.mVerifyHeadingsExpectedValues;
            }
        }
        
        public virtual VerifyRowsExpectedValues VerifyRowsExpectedValues
        {
            get
            {
                if ((this.mVerifyRowsExpectedValues == null))
                {
                    this.mVerifyRowsExpectedValues = new VerifyRowsExpectedValues();
                }
                return this.mVerifyRowsExpectedValues;
            }
        }
        
        public virtual CheckTableDataExpectedValues CheckTableDataExpectedValues
        {
            get
            {
                if ((this.mCheckTableDataExpectedValues == null))
                {
                    this.mCheckTableDataExpectedValues = new CheckTableDataExpectedValues();
                }
                return this.mCheckTableDataExpectedValues;
            }
        }
        
        public virtual CheckNumberRowsExpectedValues CheckNumberRowsExpectedValues
        {
            get
            {
                if ((this.mCheckNumberRowsExpectedValues == null))
                {
                    this.mCheckNumberRowsExpectedValues = new CheckNumberRowsExpectedValues();
                }
                return this.mCheckNumberRowsExpectedValues;
            }
        }
        
        public UIMSNCanadaOutlookSkypWindow UIMSNCanadaOutlookSkypWindow
        {
            get
            {
                if ((this.mUIMSNCanadaOutlookSkypWindow == null))
                {
                    this.mUIMSNCanadaOutlookSkypWindow = new UIMSNCanadaOutlookSkypWindow();
                }
                return this.mUIMSNCanadaOutlookSkypWindow;
            }
        }
        #endregion
        
        #region Fields
        private IETestBrowserParams mIETestBrowserParams;
        
        private VerifyHeadingsExpectedValues mVerifyHeadingsExpectedValues;
        
        private VerifyRowsExpectedValues mVerifyRowsExpectedValues;
        
        private CheckTableDataExpectedValues mCheckTableDataExpectedValues;
        
        private CheckNumberRowsExpectedValues mCheckNumberRowsExpectedValues;
        
        private UIMSNCanadaOutlookSkypWindow mUIMSNCanadaOutlookSkypWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'IETestBrowser'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class IETestBrowserParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost/PaintWebSite/PaintStore.aspx' using new browser instance
        /// </summary>
        public string UIMSNCanadaOutlookSkypWindowUrl = "http://localhost/PaintWebSite/PaintStore.aspx";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyHeadings'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class VerifyHeadingsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Paint Name' cell equals 'Paint Name'
        /// </summary>
        public string UIPaintNameCellInnerText = "Paint Name";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Quantity' cell equals 'Quantity'
        /// </summary>
        public string UIQuantityCellInnerText = "Quantity";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyRows'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class VerifyRowsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Red' cell equals 'Red'
        /// </summary>
        public string UIRedCellInnerText = "Red";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '3' cell equals '3'
        /// </summary>
        public string UIItem3CellInnerText = "3";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Turquoise' cell equals 'Turquoise'
        /// </summary>
        public string UITurquoiseCellInnerText = "Turquoise";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '17' cell equals '17'
        /// </summary>
        public string UIItem17CellInnerText = "17";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Grey' cell equals 'Grey'
        /// </summary>
        public string UIGreyCellInnerText = "Grey";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '5' cell equals '5'
        /// </summary>
        public string UIItem5CellInnerText = "5";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Indigo' cell equals 'Indigo'
        /// </summary>
        public string UIIndigoCellInnerText = "Indigo";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '6' cell equals '6'
        /// </summary>
        public string UIItem6CellInnerText = "6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTableData'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class CheckTableDataExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Paint NameQuantity Grey5 Indigo6 Red3' pane equals ' 
        ///Paint NameQuantity
        ///Grey5
        ///Indigo6
        ///Red3
        ///Turquoise17'
        /// </summary>
        public string UIPaintNameQuantityGrePane1InnerText = " \r\nPaint NameQuantity\r\nGrey5\r\nIndigo6\r\nRed3\r\nTurquoise17";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckNumberRows'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class CheckNumberRowsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Paint NameQuantity Grey5 Indigo6 Red3' pane matches ' 
        ///Paint NameQuantity
        ///Grey5
        ///Indigo6
        ///Red3
        ///Turquoise17'
        /// </summary>
        public string UIPaintNameQuantityGrePane1InnerText = " \r\nPaint NameQuantity\r\nGrey5\r\nIndigo6\r\nRed3\r\nTurquoise17";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMSNCanadaOutlookSkypWindow : BrowserWindow
    {
        
        public UIMSNCanadaOutlookSkypWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "MSN Canada - Outlook, Skype, Bing and Latest News";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("MSN Canada - Outlook, Skype, Bing and Latest News");
            this.WindowTitles.Add("PaintStore");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIPaintStoreDocument UIPaintStoreDocument
        {
            get
            {
                if ((this.mUIPaintStoreDocument == null))
                {
                    this.mUIPaintStoreDocument = new UIPaintStoreDocument(this);
                }
                return this.mUIPaintStoreDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIPaintStoreDocument mUIPaintStoreDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPaintStoreDocument : HtmlDocument
    {
        
        public UIPaintStoreDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "PaintStore";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/PaintWebSite/PaintStore.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/PaintWebSite/PaintStore.aspx";
            this.WindowTitles.Add("PaintStore");
            #endregion
        }
        
        #region Properties
        public UIPaintTableTable UIPaintTableTable
        {
            get
            {
                if ((this.mUIPaintTableTable == null))
                {
                    this.mUIPaintTableTable = new UIPaintTableTable(this);
                }
                return this.mUIPaintTableTable;
            }
        }
        
        public UICtl01Custom UICtl01Custom
        {
            get
            {
                if ((this.mUICtl01Custom == null))
                {
                    this.mUICtl01Custom = new UICtl01Custom(this);
                }
                return this.mUICtl01Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIPaintTableTable mUIPaintTableTable;
        
        private UICtl01Custom mUICtl01Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPaintTableTable : HtmlTable
    {
        
        public UIPaintTableTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "PaintTable";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Paint NameQuantity\r\nRed3\r\nTurquoise17\r\nG";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "align=\"Center\" id=\"PaintTable\" style=\"border-style: solid; width: 30%;\" border=\"1" +
                "\" rules=\"all\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = null;
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("PaintStore");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIPaintNameCell
        {
            get
            {
                if ((this.mUIPaintNameCell == null))
                {
                    this.mUIPaintNameCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIPaintNameCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIPaintNameCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIPaintNameCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIPaintNameCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Paint Name";
                    this.mUIPaintNameCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "align=\"center\"";
                    this.mUIPaintNameCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUIPaintNameCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIPaintNameCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIPaintNameCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIPaintNameCell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIPaintNameCell;
            }
        }
        
        public HtmlCell UIQuantityCell
        {
            get
            {
                if ((this.mUIQuantityCell == null))
                {
                    this.mUIQuantityCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIQuantityCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIQuantityCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIQuantityCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIQuantityCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Quantity";
                    this.mUIQuantityCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "align=\"center\"";
                    this.mUIQuantityCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUIQuantityCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIQuantityCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIQuantityCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "2";
                    this.mUIQuantityCell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIQuantityCell;
            }
        }
        
        public HtmlCell UIRedCell
        {
            get
            {
                if ((this.mUIRedCell == null))
                {
                    this.mUIRedCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIRedCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIRedCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIRedCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIRedCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Red";
                    this.mUIRedCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIRedCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIRedCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIRedCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIRedCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "3";
                    this.mUIRedCell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIRedCell;
            }
        }
        
        public HtmlCell UIItem3Cell
        {
            get
            {
                if ((this.mUIItem3Cell == null))
                {
                    this.mUIItem3Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem3Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem3Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem3Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem3Cell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "3";
                    this.mUIItem3Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIItem3Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIItem3Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIItem3Cell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIItem3Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUIItem3Cell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIItem3Cell;
            }
        }
        
        public HtmlCell UITurquoiseCell
        {
            get
            {
                if ((this.mUITurquoiseCell == null))
                {
                    this.mUITurquoiseCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUITurquoiseCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUITurquoiseCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUITurquoiseCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUITurquoiseCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Turquoise";
                    this.mUITurquoiseCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUITurquoiseCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUITurquoiseCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUITurquoiseCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUITurquoiseCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "5";
                    this.mUITurquoiseCell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUITurquoiseCell;
            }
        }
        
        public HtmlCell UIItem17Cell
        {
            get
            {
                if ((this.mUIItem17Cell == null))
                {
                    this.mUIItem17Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem17Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem17Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem17Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem17Cell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "17";
                    this.mUIItem17Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIItem17Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "2";
                    this.mUIItem17Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIItem17Cell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIItem17Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "6";
                    this.mUIItem17Cell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIItem17Cell;
            }
        }
        
        public HtmlCell UIGreyCell
        {
            get
            {
                if ((this.mUIGreyCell == null))
                {
                    this.mUIGreyCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIGreyCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIGreyCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIGreyCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIGreyCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Grey";
                    this.mUIGreyCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIGreyCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
                    this.mUIGreyCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIGreyCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIGreyCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "7";
                    this.mUIGreyCell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIGreyCell;
            }
        }
        
        public HtmlCell UIItem5Cell
        {
            get
            {
                if ((this.mUIItem5Cell == null))
                {
                    this.mUIItem5Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem5Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem5Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem5Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem5Cell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "5";
                    this.mUIItem5Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIItem5Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
                    this.mUIItem5Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIItem5Cell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIItem5Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "8";
                    this.mUIItem5Cell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIItem5Cell;
            }
        }
        
        public HtmlCell UIIndigoCell
        {
            get
            {
                if ((this.mUIIndigoCell == null))
                {
                    this.mUIIndigoCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIIndigoCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIIndigoCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIIndigoCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIIndigoCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Indigo";
                    this.mUIIndigoCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIIndigoCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "4";
                    this.mUIIndigoCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIIndigoCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIIndigoCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "9";
                    this.mUIIndigoCell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIIndigoCell;
            }
        }
        
        public HtmlCell UIItem6Cell
        {
            get
            {
                if ((this.mUIItem6Cell == null))
                {
                    this.mUIItem6Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIItem6Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem6Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem6Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem6Cell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "6";
                    this.mUIItem6Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIItem6Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "4";
                    this.mUIItem6Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIItem6Cell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIItem6Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "10";
                    this.mUIItem6Cell.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIItem6Cell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIPaintNameCell;
        
        private HtmlCell mUIQuantityCell;
        
        private HtmlCell mUIRedCell;
        
        private HtmlCell mUIItem3Cell;
        
        private HtmlCell mUITurquoiseCell;
        
        private HtmlCell mUIItem17Cell;
        
        private HtmlCell mUIGreyCell;
        
        private HtmlCell mUIItem5Cell;
        
        private HtmlCell mUIIndigoCell;
        
        private HtmlCell mUIItem6Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl01Custom : HtmlCustom
    {
        
        public UICtl01Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "ctl01";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"ctl01\" action=\"PaintStore.aspx\" meth";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("PaintStore");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPaintNameQuantityGrePane
        {
            get
            {
                if ((this.mUIPaintNameQuantityGrePane == null))
                {
                    this.mUIPaintNameQuantityGrePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPaintNameQuantityGrePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPaintNameQuantityGrePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPaintNameQuantityGrePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Paint NameQuantity\r\nGrey5\r\nIndigo6\r\nBlue";
                    this.mUIPaintNameQuantityGrePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPaintNameQuantityGrePane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIPaintNameQuantityGrePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = null;
                    this.mUIPaintNameQuantityGrePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIPaintNameQuantityGrePane.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIPaintNameQuantityGrePane;
            }
        }
        
        public HtmlDiv UIPaintNameQuantityGrePane1
        {
            get
            {
                if ((this.mUIPaintNameQuantityGrePane1 == null))
                {
                    this.mUIPaintNameQuantityGrePane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPaintNameQuantityGrePane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPaintNameQuantityGrePane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPaintNameQuantityGrePane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Paint NameQuantity\r\nGrey5\r\nIndigo6\r\nRed3";
                    this.mUIPaintNameQuantityGrePane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPaintNameQuantityGrePane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIPaintNameQuantityGrePane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = null;
                    this.mUIPaintNameQuantityGrePane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIPaintNameQuantityGrePane1.WindowTitles.Add("PaintStore");
                    #endregion
                }
                return this.mUIPaintNameQuantityGrePane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPaintNameQuantityGrePane;
        
        private HtmlDiv mUIPaintNameQuantityGrePane1;
        #endregion
    }
}
